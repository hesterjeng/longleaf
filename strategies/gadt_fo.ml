open Gadt
module I = Tacaml.Indicator.Raw

let ( @@@ ) f x = App (f, x)
let uid () = Var (Uuidm.v4_gen Util.random_state ())

(* Single argument indicators *)
let dema = Fun I.dema @@@ uid ()
let ema = Fun I.ema @@@ uid ()
let kama = Fun I.kama @@@ uid ()
let ma = Fun I.ma @@@ uid ()
let midpoint = Fun I.midpoint @@@ uid ()
let midprice = Fun I.midprice @@@ uid ()
let sma = Fun I.sma @@@ uid ()
let tema = Fun I.tema @@@ uid ()
let trima = Fun I.trima @@@ uid ()
let wma = Fun I.wma @@@ uid ()
let adx = Fun I.adx @@@ uid ()
let adxr = Fun I.adxr @@@ uid ()
let aroon_osc = Fun I.aroon_osc @@@ uid ()
let cci = Fun I.cci @@@ uid ()
let cmo = Fun I.cmo @@@ uid ()
let dx = Fun I.dx @@@ uid ()
let mfi = Fun I.mfi @@@ uid ()
let minus_di = Fun I.minus_di @@@ uid ()
let minus_dm = Fun I.minus_dm @@@ uid ()
let mom = Fun I.mom @@@ uid ()
let plus_di = Fun I.plus_di @@@ uid ()
let plus_dm = Fun I.plus_dm @@@ uid ()
let roc = Fun I.roc @@@ uid ()
let rocp = Fun I.rocp @@@ uid ()
let rocr = Fun I.rocr @@@ uid ()
let rocr100 = Fun I.rocr100 @@@ uid ()
let rsi = Fun I.rsi @@@ uid ()
let trix = Fun I.trix @@@ uid ()
let willr = Fun I.willr @@@ uid ()
let atr = Fun I.atr @@@ uid ()
let natr = Fun I.natr @@@ uid ()
let aroon_down = Fun I.aroon_down @@@ uid ()
let aroon_up = Fun I.aroon_up @@@ uid ()
let beta = Fun I.beta @@@ uid ()
let correl = Fun I.correl @@@ uid ()
let linearreg = Fun I.linearreg @@@ uid ()
let linearreg_angle = Fun I.linearreg_angle @@@ uid ()
let linearreg_intercept = Fun I.linearreg_intercept @@@ uid ()
let linearreg_slope = Fun I.linearreg_slope @@@ uid ()
let min_max_min = Fun I.min_max_min @@@ uid ()
let min_max_max = Fun I.min_max_max @@@ uid ()
let tsf = Fun I.tsf @@@ uid ()
let max = Fun I.max @@@ uid ()
let min = Fun I.min @@@ uid ()
let sum = Fun I.sum @@@ uid ()
let avgdev = Fun I.avgdev @@@ uid ()
let imi = Fun I.imi @@@ uid ()
let accbands_upper = Fun I.accbands_upper @@@ uid ()
let accbands_middle = Fun I.accbands_middle @@@ uid ()
let accbands_lower = Fun I.accbands_lower @@@ uid ()

(* Two argument indicators *)
let mama = Fun I.mama @@@ uid () @@@ uid ()
let mavp = Fun I.mavp @@@ uid () @@@ uid ()
let sar = Fun I.sar @@@ uid () @@@ uid ()
let t3 = Fun I.t3 @@@ uid () @@@ uid ()
let apo = Fun I.apo @@@ uid () @@@ uid ()
let ppo = Fun I.ppo @@@ uid () @@@ uid ()
let adosc = Fun I.adosc @@@ uid () @@@ uid ()
let stddev = Fun I.stddev @@@ uid () @@@ uid ()
let var = Fun I.var @@@ uid () @@@ uid ()
let mama_mama = Fun I.mama_mama @@@ uid () @@@ uid ()
let mama_fama = Fun I.mama_fama @@@ uid () @@@ uid ()
let stoch_f_fast_k = Fun I.stoch_f_fast_k @@@ uid () @@@ uid ()
let stoch_f_fast_d = Fun I.stoch_f_fast_d @@@ uid () @@@ uid ()

(* Three argument indicators *)
let upper_bband = Fun I.upper_bband @@@ uid () @@@ uid () @@@ uid ()
let middle_bband = Fun I.middle_bband @@@ uid () @@@ uid () @@@ uid ()
let lower_bband = Fun I.lower_bband @@@ uid () @@@ uid () @@@ uid ()
let macd_macd = Fun I.macd_macd @@@ uid () @@@ uid () @@@ uid ()
let macd_signal = Fun I.macd_signal @@@ uid () @@@ uid () @@@ uid ()
let macd_hist = Fun I.macd_hist @@@ uid () @@@ uid () @@@ uid ()
let macd_ext_macd = Fun I.macd_ext_macd @@@ uid () @@@ uid () @@@ uid ()
let macd_ext_signal = Fun I.macd_ext_signal @@@ uid () @@@ uid () @@@ uid ()
let macd_ext_hist = Fun I.macd_ext_hist @@@ uid () @@@ uid () @@@ uid ()
let ultosc = Fun I.ultosc @@@ uid () @@@ uid () @@@ uid ()
let stoch_slow_k = Fun I.stoch_slow_k @@@ uid () @@@ uid () @@@ uid ()
let stoch_slow_d = Fun I.stoch_slow_d @@@ uid () @@@ uid () @@@ uid ()
let stoch_rsi_fast_k = Fun I.stoch_rsi_fast_k @@@ uid () @@@ uid () @@@ uid ()
let stoch_rsi_fast_d = Fun I.stoch_rsi_fast_d @@@ uid () @@@ uid () @@@ uid ()

(* Zero argument indicators *)
let ht_trendline = Fun I.ht_trendline
let ad = Fun I.ad
let obv = Fun I.obv
let trange = Fun I.trange
let avg_price = Fun I.avg_price
let med_price = Fun I.med_price
let typ_price = Fun I.typ_price
let wcl_price = Fun I.wcl_price
let ht_dc_period = Fun I.ht_dc_period
let ht_dc_phase = Fun I.ht_dc_phase
let ht_phasor_inphase = Fun I.ht_phasor_inphase
let ht_phasor_quadrature = Fun I.ht_phasor_quadrature
let ht_sine_sine = Fun I.ht_sine_sine
let ht_sine_leadsine = Fun I.ht_sine_leadsine
let acos = Fun I.acos
let asin = Fun I.asin
let atan = Fun I.atan
let ceil = Fun I.ceil
let cos = Fun I.cos
let cosh = Fun I.cosh
let exp = Fun I.exp
let floor = Fun I.floor
let ln = Fun I.ln
let log10 = Fun I.log10
let sin = Fun I.sin
let sinh = Fun I.sinh
let sqrt = Fun I.sqrt
let tan = Fun I.tan
let tanh = Fun I.tanh
let add = Fun I.add
let div = Fun I.div
let mult = Fun I.mult
let sub = Fun I.sub
let bop = Fun I.bop

(* Candlestick patterns (most are zero args, some have one arg) *)
let ht_trend_mode = Fun I.ht_trend_mode
let cdl_2crows = Fun I.cdl_2crows
let cdl_3blackcrows = Fun I.cdl_3blackcrows
let cdl_3inside = Fun I.cdl_3inside
let cdl_3linestrike = Fun I.cdl_3linestrike
let cdl_3outside = Fun I.cdl_3outside
let cdl_3starsinsouth = Fun I.cdl_3starsinsouth
let cdl_3whitesoldiers = Fun I.cdl_3whitesoldiers
let cdl_abandonedbaby = Fun I.cdl_abandonedbaby @@@ uid ()
let cdl_advanceblock = Fun I.cdl_advanceblock
let cdl_belthold = Fun I.cdl_belthold
let cdl_breakaway = Fun I.cdl_breakaway
let cdl_closingmarubozu = Fun I.cdl_closingmarubozu
let cdl_concealbabyswall = Fun I.cdl_concealbabyswall
let cdl_counterattack = Fun I.cdl_counterattack
let cdl_darkcloudcover = Fun I.cdl_darkcloudcover @@@ uid ()
let cdl_doji = Fun I.cdl_doji
let cdl_dojistar = Fun I.cdl_dojistar
let cdl_dragonflydoji = Fun I.cdl_dragonflydoji
let cdl_engulfing = Fun I.cdl_engulfing
let cdl_eveningdojistar = Fun I.cdl_eveningdojistar @@@ uid ()
let cdl_eveningstar = Fun I.cdl_eveningstar @@@ uid ()
let cdl_gap_side_side_white = Fun I.cdl_gap_side_side_white
let cdl_gravestonedoji = Fun I.cdl_gravestonedoji
let cdl_hammer = Fun I.cdl_hammer
let cdl_hangingman = Fun I.cdl_hangingman
let cdl_harami = Fun I.cdl_harami
let cdl_haramicross = Fun I.cdl_haramicross
let cdl_highwave = Fun I.cdl_highwave
let cdl_hikkake = Fun I.cdl_hikkake
let cdl_hikkakemod = Fun I.cdl_hikkakemod
let cdl_homingpigeon = Fun I.cdl_homingpigeon
let cdl_identical3crows = Fun I.cdl_identical3crows
let cdl_inneck = Fun I.cdl_inneck
let cdl_invertedhammer = Fun I.cdl_invertedhammer
let cdl_kicking = Fun I.cdl_kicking
let cdl_kickingbylength = Fun I.cdl_kickingbylength
let cdl_ladderbottom = Fun I.cdl_ladderbottom
let cdl_longleggedDoji = Fun I.cdl_longleggedDoji
let cdl_longline = Fun I.cdl_longline
let cdl_marubozu = Fun I.cdl_marubozu
let cdl_matchinglow = Fun I.cdl_matchinglow
let cdl_mathold = Fun I.cdl_mathold @@@ uid ()
let cdl_morningdojistar = Fun I.cdl_morningdojistar @@@ uid ()
let cdl_morningstar = Fun I.cdl_morningstar @@@ uid ()
let cdl_onneck = Fun I.cdl_onneck
let cdl_piercing = Fun I.cdl_piercing
let cdl_rickshawman = Fun I.cdl_rickshawman
let cdl_risefall3methods = Fun I.cdl_risefall3methods
let cdl_separatinglines = Fun I.cdl_separatinglines
let cdl_shootingstar = Fun I.cdl_shootingstar
let cdl_shortline = Fun I.cdl_shortline
let cdl_spinningtop = Fun I.cdl_spinningtop
let cdl_stalledpattern = Fun I.cdl_stalledpattern
let cdl_sticksandwich = Fun I.cdl_sticksandwich
let cdl_takuri = Fun I.cdl_takuri
let cdl_tasukigap = Fun I.cdl_tasukigap
let cdl_thrusting = Fun I.cdl_thrusting
let cdl_tristar = Fun I.cdl_tristar
let cdl_unique3river = Fun I.cdl_unique3river
let cdl_upsidegap2crows = Fun I.cdl_upsidegap2crows
let cdl_xsidegap3methods = Fun I.cdl_xsidegap3methods
let max_index = Fun I.max_index @@@ uid ()
let min_index = Fun I.min_index @@@ uid ()
let min_max_index_min = Fun I.min_max_index_min @@@ uid ()
let min_max_index_max = Fun I.min_max_index_max @@@ uid ()
